// Code generated by protoc-gen-go. DO NOT EDIT.
// source: person.proto

/*
Package person is a generated protocol buffer package.

It is generated from these files:
	person.proto

It has these top-level messages:
	PersonRequest
	PersonResponse
	PersonFilter
*/
package person

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Request message for creating a new person
type PersonRequest struct {
	Id        int32                    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name      string                   `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Email     string                   `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
	Phone     string                   `protobuf:"bytes,4,opt,name=phone" json:"phone,omitempty"`
	Addresses []*PersonRequest_Address `protobuf:"bytes,5,rep,name=addresses" json:"addresses,omitempty"`
}

func (m *PersonRequest) Reset()                    { *m = PersonRequest{} }
func (m *PersonRequest) String() string            { return proto.CompactTextString(m) }
func (*PersonRequest) ProtoMessage()               {}
func (*PersonRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PersonRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *PersonRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *PersonRequest) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *PersonRequest) GetAddresses() []*PersonRequest_Address {
	if m != nil {
		return m.Addresses
	}
	return nil
}

type PersonRequest_Address struct {
	Street            string `protobuf:"bytes,1,opt,name=street" json:"street,omitempty"`
	City              string `protobuf:"bytes,2,opt,name=city" json:"city,omitempty"`
	State             string `protobuf:"bytes,3,opt,name=state" json:"state,omitempty"`
	Zip               string `protobuf:"bytes,4,opt,name=zip" json:"zip,omitempty"`
	IsShippingAddress bool   `protobuf:"varint,5,opt,name=isShippingAddress" json:"isShippingAddress,omitempty"`
}

func (m *PersonRequest_Address) Reset()                    { *m = PersonRequest_Address{} }
func (m *PersonRequest_Address) String() string            { return proto.CompactTextString(m) }
func (*PersonRequest_Address) ProtoMessage()               {}
func (*PersonRequest_Address) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0, 0} }

func (m *PersonRequest_Address) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *PersonRequest_Address) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *PersonRequest_Address) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *PersonRequest_Address) GetZip() string {
	if m != nil {
		return m.Zip
	}
	return ""
}

func (m *PersonRequest_Address) GetIsShippingAddress() bool {
	if m != nil {
		return m.IsShippingAddress
	}
	return false
}

type PersonResponse struct {
	Id      int32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Success bool  `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *PersonResponse) Reset()                    { *m = PersonResponse{} }
func (m *PersonResponse) String() string            { return proto.CompactTextString(m) }
func (*PersonResponse) ProtoMessage()               {}
func (*PersonResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PersonResponse) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *PersonResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type PersonFilter struct {
	Keyword string `protobuf:"bytes,1,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *PersonFilter) Reset()                    { *m = PersonFilter{} }
func (m *PersonFilter) String() string            { return proto.CompactTextString(m) }
func (*PersonFilter) ProtoMessage()               {}
func (*PersonFilter) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PersonFilter) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

func init() {
	proto.RegisterType((*PersonRequest)(nil), "person.PersonRequest")
	proto.RegisterType((*PersonRequest_Address)(nil), "person.PersonRequest.Address")
	proto.RegisterType((*PersonResponse)(nil), "person.PersonResponse")
	proto.RegisterType((*PersonFilter)(nil), "person.PersonFilter")
}

func init() { proto.RegisterFile("person.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 323 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xdf, 0x4a, 0xc3, 0x30,
	0x14, 0xc6, 0x97, 0x6e, 0xed, 0xdc, 0x71, 0x0e, 0x0d, 0x73, 0x84, 0x81, 0x50, 0x7a, 0xd5, 0x0b,
	0x19, 0x32, 0xef, 0x14, 0x11, 0x11, 0xf4, 0x56, 0xea, 0x13, 0xd4, 0xf6, 0xe0, 0x82, 0x5b, 0x13,
	0x93, 0x0c, 0x99, 0x4f, 0x20, 0xf8, 0x26, 0x3e, 0xa5, 0xe4, 0x4f, 0x91, 0xb9, 0xdd, 0x9d, 0xef,
	0xeb, 0xd7, 0x2f, 0xbf, 0x1c, 0x02, 0x43, 0x89, 0x4a, 0x8b, 0x66, 0x26, 0x95, 0x30, 0x82, 0x26,
	0x5e, 0x65, 0x3f, 0x11, 0x1c, 0x3d, 0xb9, 0xb1, 0xc0, 0xf7, 0x35, 0x6a, 0x43, 0x47, 0x10, 0xf1,
	0x9a, 0x91, 0x94, 0xe4, 0x71, 0x11, 0xf1, 0x9a, 0x52, 0xe8, 0x35, 0xe5, 0x0a, 0x59, 0x94, 0x92,
	0x7c, 0x50, 0xb8, 0x99, 0x8e, 0x21, 0xc6, 0x55, 0xc9, 0x97, 0xac, 0xeb, 0x4c, 0x2f, 0xac, 0x2b,
	0x17, 0xa2, 0x41, 0xd6, 0xf3, 0xae, 0x13, 0xf4, 0x1a, 0x06, 0x65, 0x5d, 0x2b, 0xd4, 0x1a, 0x35,
	0x8b, 0xd3, 0x6e, 0x7e, 0x38, 0x3f, 0x9b, 0x05, 0x96, 0xad, 0x93, 0x67, 0x77, 0x3e, 0x56, 0xfc,
	0xe5, 0xa7, 0xdf, 0x04, 0xfa, 0xc1, 0xa6, 0x13, 0x48, 0xb4, 0x51, 0x88, 0xc6, 0xc1, 0x0d, 0x8a,
	0xa0, 0x2c, 0x60, 0xc5, 0xcd, 0xa6, 0x05, 0xb4, 0xb3, 0x45, 0xd1, 0xa6, 0x34, 0xd8, 0x02, 0x3a,
	0x41, 0x8f, 0xa1, 0xfb, 0xc9, 0x65, 0xc0, 0xb3, 0x23, 0x3d, 0x87, 0x13, 0xae, 0x9f, 0x17, 0x5c,
	0x4a, 0xde, 0xbc, 0x86, 0x83, 0x58, 0x9c, 0x92, 0xfc, 0xa0, 0xd8, 0xfd, 0x90, 0x5d, 0xc1, 0xa8,
	0x25, 0xd6, 0x52, 0x34, 0x1a, 0x77, 0x96, 0xc5, 0xa0, 0xaf, 0xd7, 0x55, 0x65, 0x5b, 0x22, 0xd7,
	0xd2, 0xca, 0x2c, 0x87, 0xa1, 0xff, 0xf7, 0x81, 0x2f, 0x0d, 0x2a, 0x9b, 0x7c, 0xc3, 0xcd, 0x87,
	0x50, 0x75, 0xb8, 0x4e, 0x2b, 0xe7, 0x5f, 0x04, 0x12, 0x1f, 0xa5, 0x37, 0x00, 0x8f, 0x68, 0xbc,
	0xd0, 0x74, 0xbc, 0xbd, 0x36, 0x5f, 0x34, 0x3d, 0xdd, 0xbb, 0xcc, 0xac, 0x73, 0x41, 0xe8, 0x2d,
	0x0c, 0xef, 0x15, 0x96, 0x06, 0x43, 0xdd, 0xfe, 0xe8, 0x74, 0xf2, 0xdf, 0xf6, 0x97, 0xcb, 0x3a,
	0x2f, 0x89, 0x7b, 0x2c, 0x97, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x3d, 0xf4, 0x67, 0x79, 0x3c,
	0x02, 0x00, 0x00,
}
